{"ast":null,"code":"import _regeneratorRuntime from \"/home/tuanla/GR1/defi_tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/tuanla/GR1/defi_tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/tuanla/GR1/defi_tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/tuanla/GR1/defi_tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tuanla/GR1/defi_tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/tuanla/GR1/defi_tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/tuanla/GR1/defi_tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tuanla/GR1/defi_tutorial/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport './App.css';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, networkId, daiTokenData, daiToken, daiTokenBalance, dappTokenData, dappToken, dappTokenBalance, tokenFarmData, tokenFarm, stakingBalance;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context2.sent;\n                // Load DaiToken\n                daiTokenData = DaiToken.networks[networkId];\n\n                if (!daiTokenData) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                daiToken = new web3.eth.Contract(DaiToken.abi, daiTokenData.address);\n                this.setState({\n                  daiToken: daiToken\n                });\n                _context2.next = 14;\n                return daiToken.methods.balanceOf(this.state.account).call();\n\n              case 14:\n                daiTokenBalance = _context2.sent;\n                this.setState({\n                  daiTokenBalance: daiTokenBalance.toString()\n                });\n                _context2.next = 19;\n                break;\n\n              case 18:\n                window.alert('DaiToken contract not deployed to detected network.');\n\n              case 19:\n                // Load DappToken\n                dappTokenData = DappToken.networks[networkId];\n\n                if (!dappTokenData) {\n                  _context2.next = 29;\n                  break;\n                }\n\n                dappToken = new web3.eth.Contract(DappToken.abi, dappTokenData.address);\n                this.setState({\n                  dappToken: dappToken\n                });\n                _context2.next = 25;\n                return dappToken.methods.balanceOf(this.state.account).call();\n\n              case 25:\n                dappTokenBalance = _context2.sent;\n                this.setState({\n                  dappTokenBalance: dappTokenBalance.toString()\n                });\n                _context2.next = 30;\n                break;\n\n              case 29:\n                window.alert('DappToken contract not deployed to detected network.');\n\n              case 30:\n                // Load TokenFarm\n                tokenFarmData = TokenFarm.networks[networkId];\n\n                if (!tokenFarmData) {\n                  _context2.next = 40;\n                  break;\n                }\n\n                tokenFarm = new web3.eth.Contract(TokenFarm.abi, tokenFarmData.address);\n                this.setState({\n                  tokenFarm: tokenFarm\n                });\n                _context2.next = 36;\n                return tokenFarm.methods.stakingBalance(this.state.account).call();\n\n              case 36:\n                stakingBalance = _context2.sent;\n                this.setState({\n                  stakingBalance: stakingBalance.toString()\n                });\n                _context2.next = 41;\n                break;\n\n              case 40:\n                window.alert('TokenFarm contract not deployed to detected network.');\n\n              case 41:\n                this.setState({\n                  loading: false\n                });\n\n              case 42:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      daiToken: {},\n      dappToken: {},\n      tokenFarm: {},\n      daiTokenBalance: '0',\n      dappTokenBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '600px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, \"Hello, World!\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/tuanla/GR1/defi_tutorial/src/components/App.js"],"names":["React","Component","Navbar","App","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","account","net","getId","networkId","daiTokenData","DaiToken","networks","daiToken","Contract","abi","address","methods","balanceOf","state","call","daiTokenBalance","toString","alert","dappTokenData","DappToken","dappToken","dappTokenBalance","tokenFarmData","TokenFarm","tokenFarm","stakingBalance","loading","ethereum","Web3","enable","currentProvider","props","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Navbar from './Navbar'\nimport './App.css'\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    const networkId = await web3.eth.net.getId()\n\n    // Load DaiToken\n    const daiTokenData = DaiToken.networks[networkId]\n    if(daiTokenData) {\n      const daiToken = new web3.eth.Contract(DaiToken.abi, daiTokenData.address)\n      this.setState({ daiToken })\n      let daiTokenBalance = await daiToken.methods.balanceOf(this.state.account).call()\n      this.setState({ daiTokenBalance: daiTokenBalance.toString() })\n    } else {\n      window.alert('DaiToken contract not deployed to detected network.')\n    }\n\n    // Load DappToken\n    const dappTokenData = DappToken.networks[networkId]\n    if(dappTokenData) {\n      const dappToken = new web3.eth.Contract(DappToken.abi, dappTokenData.address)\n      this.setState({ dappToken })\n      let dappTokenBalance = await dappToken.methods.balanceOf(this.state.account).call()\n      this.setState({ dappTokenBalance: dappTokenBalance.toString() })\n    } else {\n      window.alert('DappToken contract not deployed to detected network.')\n    }\n\n    // Load TokenFarm\n    const tokenFarmData = TokenFarm.networks[networkId]\n    if(tokenFarmData) {\n      const tokenFarm = new web3.eth.Contract(TokenFarm.abi, tokenFarmData.address)\n      this.setState({ tokenFarm })\n      let stakingBalance = await tokenFarm.methods.stakingBalance(this.state.account).call()\n      this.setState({ stakingBalance: stakingBalance.toString() })\n    } else {\n      window.alert('TokenFarm contract not deployed to detected network.')\n    }\n\n    this.setState({ loading: false })\n  }\n  \n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '0x0',\n      daiToken: {},\n      dappToken: {},\n      tokenFarm: {},\n      daiTokenBalance: '0',\n      dappTokenBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '600px' }}>\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                  href=\"http://www.dappuniversity.com/bootcamp\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                </a>\n\n                <h1>Hello, World!</h1>\n\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}